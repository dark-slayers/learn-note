做笔记时使用的Spring版本：4.3.7.RELEASE +

用于类的注解：
@Component来表示一个通用注释用于说明一个类是一个spring容器管理的类。即就是该类已经拉入到spring的管理中了。
@Controller, @Service, @Repository是@Component的细化，这三个注解比@Component带有更多的语义，它们分别对应了控制层、服务层、持久层的类。
@Repository标签是用来给持久层的类定义一个名字，让Spring根据这个名字关联到这个类。
@Service是用于服务层的IServiceImpl类文件，功能与@Repository类似。
@Controller来标识当前类是一个控制器servlet。
@RestController注解，它继承自@Controller注解,当实现一个RESTful web services的时候使用@RestController，response将一直通过response body发送。

main类的注解：
@SpringBootApplication = (默认属性)@Configuration + @EnableAutoConfiguration + @ComponentScan。
@Configuration：提到@Configuration就要提到他的搭档@Bean。使用这两个注解就可以创建一个简单的spring配置类，可以用来替代相应的xml配置文件。
@Configuration的注解类标识这个类可以使用Spring IoC容器作为bean定义的来源。
@Bean注解告诉Spring，一个带有@Bean的注解方法将返回一个对象，该对象应该被注册为在Spring应用程序上下文中的bean。
@EnableAutoConfiguration：能够自动配置spring的上下文，试图猜测和配置你想要的bean类，通常会自动根据你的类路径和你的bean定义自动配置。
@ComponentScan：会自动扫描指定包下的全部标有@Component的类，并注册成bean，当然包括@Component下的子注解@Service,@Repository,@Controller。

@EnableScheduling配置类注解@EnableScheduling来开启对计划任务的支持，然后在要执行计划任务的方法上注解@Scheduled，声明这是一个计划任务。


用于参数的注解：
@RequestParam
public Greeting greeting(@RequestParam(value="name", defaultValue="World") String name)
前端需要传递一个name参数，如果没有传，则使用默认值"World"
public String filesUpload(@RequestParam(value="aa", required=true) String inputStr, HttpServletRequest request)
通过required=false或者true来要求@RequestParam配置的前端参数是否一定要传
如果用@RequestMapping注解的参数是int基本类型，但是required=false，这时如果不传参数值会报错，因为不传值，会赋值为null给int，这个不可以
